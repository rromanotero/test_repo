name: Package Services

on:
  push:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      TARGET_PLATFORM: linux/arm/v7

    steps:
    - name: Checkout the code
      uses: actions/checkout@v1
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Docker Login
      if: success()
      run: |
        echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/arm/v7
        tags: ${{github.repository}}:${{github.sha}}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: mode=max,type=local,dest=/tmp/.buildx-cache-new
    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  ####################################################################
  ####################################################################
  ####################################################################

  upgrade_helm_app_version:
    runs-on: ubuntu-latest
    needs: [build_and_publish]
    steps:
    - name: Checkout Helm Chart repo
      uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
        repository: ${{ github.repository }}_cd
        ref: ${{ github.ref }}
    - name: Upgrade Helm app version
      if: success()
      env:
        COMMIT_MSG: ${{ github.event.head_commit.message }}
      run: |
        BRANCH_NAME=${GITHUB_REF##*/}
        APP_VERSION=$BRANCH_NAME'-'$GITHUB_SHA
        GITHUB_REPOSITORY_LASTNAME=${GITHUB_REPOSITORY##*/}
        HELM_CHART_NAME=$(echo "$GITHUB_REPOSITORY_LASTNAME" | tr '_' '-')

        echo "GITHUB_REPOSITORY="$GITHUB_REPOSITORY
        echo "GITHUB_REPOSITORY_LASTNAME="$GITHUB_REPOSITORY_LASTNAME
        echo "HELM_CHART_NAME="$HELM_CHART_NAME
        echo "BRANCH_NAME="$BRANCH_NAME
        echo "GITHUB_SHA="$GITHUB_SHA
        echo "APP_VERSION="$APP_VERSION
        echo "COMMIT_MSG="$COMMIT_MSG

        ls -l

        echo '---'
        echo 'Set image repository (values.yaml)'

        ORIGINAL_IMAGE_REPO_LINE=$(grep -F "repository:" chart/values.yaml)
        NEW_IMAGE_REPO_LINE='repository: '$GITHUB_REPOSITORY
        sed -i "s|$ORIGINAL_IMAGE_REPO_LINE|  $NEW_IMAGE_REPO_LINE|g" chart/values.yaml
        sleep 0.2 #so logs don't come out of order

        echo 'Upgrade image tag (values.yaml)'

        ORIGINAL_TAG_LINE=$(grep -F "tag:" chart/values.yaml)
        NEW_TAG_LINE='tag: '$APP_VERSION
        sed -i "s|$ORIGINAL_TAG_LINE|  $NEW_TAG_LINE|g" chart/values.yaml
        sleep 0.2

        echo 'Set chart name (Chart.yaml)'

        ORIGINAL_NAME=$(grep -F "name:" chart/Chart.yaml)
        NEW_NAME='name: '$HELM_CHART_NAME
        sed -i "s|$ORIGINAL_NAME|$NEW_NAME|g" chart/Chart.yaml
        sleep 0.2

        echo 'Upgrade app version (Chart.yaml)'

        ORIGINAL_VERSION_LINE=$(grep -F "appVersion:" chart/Chart.yaml)
        NEW_VERSION_LINE='appVersion: '$APP_VERSION
        sed -i "s|$ORIGINAL_VERSION_LINE|$NEW_VERSION_LINE|g" chart/Chart.yaml
        sleep 0.2
        echo '---'

        git config --global hub.protocol https
        git config --global user.email "ci@noreply.com"
        git config --global user.name "ci"

        set -x
        git add . && git commit -m 'upgrade to '$APP_VERSION'('"$COMMIT_MSG"')'
        git diff HEAD^ HEAD

    - name: Push changes
      uses: ad-m/github-push-action@master
      if: success()
      with:
        repository: ${{ github.repository }}_cd
        github_token: ${{ secrets.PERSONAL_TOKEN }}
        branch: ${{ github.ref }}
